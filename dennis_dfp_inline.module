<?php
/**
 * @file
 * dennis_dfp_inline.module
 */



/**
 * Implements hook_theme().
 */
function dennis_dfp_inline_theme() {
  return array(
    'dennis_dfp_inline_context_form' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_context_registry().
 */
function dennis_dfp_inline_context_registry() {
  return array(
    'reactions' => array(
      'dennis_dfp_inline' => array(
        'title' => t('DFP Inline Tag'),
        'plugin' => 'dennis_dfp_inline',
      ),
    ),
  );
}

/**
 * Implements hook_context_plugins().
 */
function dennis_dfp_inline_context_plugins() {
  $plugins = array();
  $plugins['dennis_dfp_inline'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'dennis_dfp_inline') . '/plugins',
      'file' => 'dennis_dfp_inline_context_reaction_add.inc',
      'class' => 'dennis_dfp_inline_context_reaction_add',
      'parent' => 'context_reaction',
    ),
  );

  return $plugins;
}

function dennis_dfp_inline_get_configuration(){

  $config = array();

   // Execute lazyadslot plugin.
  if ($plugin = context_get_plugin('reaction', 'dennis_dfp_inline')) {
    $plugin->execute();
    foreach ($plugin->placeholder_config as $values) {
      $config = $values;

    }
  }

  return $config;
}

function dennis_dfp_inline_page_build(){

  $config = dennis_dfp_inline_get_configuration();
  _dennis_dfp_inline_load_js($config);

}

/**
 * Load the JS application via require.
 */
function _dennis_dfp_inline_load_js($placeholders) {

  $js_devel = variable_get('dennis_js_devel', FALSE);
  $subfolder = ($js_devel) ? 'src' : 'dist';
  $path = drupal_get_path('module', 'dennis_dfp_inline') . '/js/' . $subfolder;

  $config = array();
  // Add collected JS configuration.
  if (!empty($placeholders)) {  
    $config['firstPosition'] = $placeholders['inline_first_position'];
    $config['placeholder'] = $placeholders['inline_placeholder'];
    $config['firstPosition'] = $placeholders['inline_first_position'];
    $config['minDistance'] = $placeholders['inline_min_distance'];
    $config['maxNumber'] = $placeholders['inline_max_num'];
    $config['selector'] = $placeholders['inline_selector'];
    // TODO: add min paragrahp length to context
    // $config['minParaLength'] = $placeholders['inline_paragraph'];

    // context settings now accessible from Drupal.settings.inlineBodyPlaceholder.placeholders
    drupal_add_js(array('dennisDfpInline' => array('config' => $config)), 'setting');
  }

  $options = array(
    'returns' => 'app',
    'init' => 'app.init();',
    'group' => DENNIS_JS_INLINE,
    'environment' => DENNIS_JS_ENV_ALL,
  );

  // Add the application path prefix - development mode as default.
  dennis_js_add_js('dfpinline', array(
    'path' => $path,
    'group' => JS_DEFAULT,
  ));

  // drupal_add_js(drupal_get_path('module', 'dennis_dfp_inline') . '/js/dist/dfpinline/app.393ac0c2.js');

  // Production mode extras.
  if (!$js_devel) {
    // Production mode needs the full path.
    $options += array(
      'path' => $path . '/dfpinline/app',
    );
    // Add bundle config.
    dennis_js_add_js(array(
      'bundles' => array(
        'dfpinline/app' => array('domReady', 'has'),
      ),
    ), 'config');
  }

  // Init the app itself, this in both dev and production.
  dennis_js_add_js('dfpinline/app', $options);
}
